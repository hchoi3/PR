name: Snyk Security

on:
  pull_request:
    branches: ["main"]

# permissions:
#   contents: read

jobs:
  snyk:
    # permissions:
      # contents: read # for actions/checkout to fetch code
      # security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      # actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
        #GitHub Actions workflow provided by Snyk which will install and auth snyk for us

        # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
        # Use || true to not fail the pipeline.
      - name: Snyk IaC report
        run: snyk iac test --sarif-file-output=snyk-code.sarif || true
        env:
          # This is where you will need to introduce the Snyk API token created with your Snyk account
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
      
        # Runs Snyk Infrastructure as Code (IaC) Test for Critical and Highs
      - name: Snyk IaC test 
        run: |
          snyk iac test --severity-threshold=critical
          snyk iac test --severity-threshold=high
        # env:
        #   # This is where you will need to introduce the Snyk API token created with your Snyk account
        #   SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      #In summary, using snyk/actions/setup is a more comprehensive approach as it not only handles authentication but also ensures that the Snyk CLI environment is correctly set up for use within GitHub Actions workflows. It provides a standardized way to incorporate Snyk into CI/CD pipelines, abstracting away setup complexities and ensuring consistency across workflows. On the other hand, directly running snyk auth might be suitable for simpler scenarios or when you need more control over the authentication process.






